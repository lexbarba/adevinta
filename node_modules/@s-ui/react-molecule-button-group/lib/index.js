'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _suiAtomButton = require('@schibstedspain/sui-atom-button');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BASE_CLASS = 'sui-MoleculeButtonGroup';

var getGroupPosition = function getGroupPosition(groupPositions, numChildren, index) {
  if (index === 0) return groupPositions.FIRST;
  if (index === numChildren - 1) return groupPositions.LAST;
  return groupPositions.MIDDLE;
};

var MoleculeButtonGroup = function MoleculeButtonGroup(_ref) {
  var children = _ref.children,
      fullWidth = _ref.fullWidth,
      groupPositions = _ref.groupPositions,
      type = _ref.type,
      props = (0, _objectWithoutProperties3.default)(_ref, ['children', 'fullWidth', 'groupPositions', 'type']);

  var numChildren = children.length;
  var getGroupPositionByIndex = getGroupPosition.bind(null, groupPositions, numChildren);
  var extendedChildren = _react2.default.Children.toArray(children).filter(Boolean).map(function (child, index) {
    var groupPosition = getGroupPositionByIndex(index);
    return _react2.default.cloneElement(child, (0, _extends3.default)({}, props, {
      type: type,
      groupPosition: groupPosition,
      fullWidth: fullWidth
    }));
  });
  return _react2.default.createElement(
    'div',
    { className: (0, _classnames2.default)(BASE_CLASS, fullWidth && BASE_CLASS + '--fullWidth') },
    extendedChildren
  );
};

MoleculeButtonGroup.displayName = 'MoleculeButtonGroup';

MoleculeButtonGroup.propTypes = process.env.NODE_ENV !== "production" ? process.env.NODE_ENV !== "production" ? {
  /** Type of button: 'primary' (default), 'accent', 'secondary', 'tertiary' */
  type: _propTypes2.default.oneOf(_suiAtomButton.atomButtonTypes),

  /** If buttons should stretch to fit the width of container */
  fullWidth: _propTypes2.default.bool,

  /** groupPositions constants (FIRST, MIDDLE, LAST) */
  groupPositions: _propTypes2.default.object
} : {} : {};

MoleculeButtonGroup.defaultProps = {
  groupPositions: {
    FIRST: 'first',
    MIDDLE: 'middle',
    LAST: 'last'
  },
  type: 'secondary'
};

exports.default = MoleculeButtonGroup;