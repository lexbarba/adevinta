import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
var BASE_CLASS = 'sui-AtomLineProgressBar';
var CLASS_INDICATOR = 'sui-AtomLineProgressBar-indicator';
var CLASS_CONTAINER_BAR = 'sui-AtomLineProgressBar-container';
var CLASS_BAR = 'sui-AtomLineProgressBar-bar';
var CLASS_BAR_ANIMATED = 'sui-AtomLineProgressBar-bar--animated';

var Indicator = function Indicator(props) {
  var indicatorBottom = props.indicatorBottom,
      percentage = props.percentage,
      indicatorTotal = props.indicatorTotal; // eslint-disable-line react/prop-types

  return React.createElement("span", {
    className: cx(CLASS_INDICATOR, CLASS_INDICATOR + "--" + (indicatorBottom ? 'bottom' : 'top'))
  }, React.createElement("strong", null, percentage), indicatorTotal ? "/100" : "%");
};

var LineProgressBar =
/*#__PURE__*/
function (_PureComponent) {
  _inheritsLoose(LineProgressBar, _PureComponent);

  function LineProgressBar() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = LineProgressBar.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        percentage = _this$props.percentage,
        indicatorBottom = _this$props.indicatorBottom,
        isAnimatedOnChange = _this$props.isAnimatedOnChange;
    var width = percentage + "%";
    var styleBar = {
      width: width
    };
    return React.createElement("div", {
      className: BASE_CLASS
    }, !indicatorBottom && React.createElement(Indicator, this.props), React.createElement("div", {
      className: CLASS_CONTAINER_BAR
    }, React.createElement("span", {
      className: cx(CLASS_BAR, isAnimatedOnChange && CLASS_BAR_ANIMATED),
      style: styleBar
    })), indicatorBottom && React.createElement(Indicator, this.props));
  };

  return LineProgressBar;
}(PureComponent);

LineProgressBar.displayName = 'LineProgressBar';
export default LineProgressBar;