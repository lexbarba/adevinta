var _SIZE_TO_WIDTH_LINE_M;

import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import Circle from './Circle';
var SIZES = {
  LARGE: 'large',
  SMALL: 'small'
};
var STATUS = {
  LOADING: 'loading',
  PROGRESS: 'progress',
  ERROR: 'error'
};
var SIZE_TO_WIDTH_LINE_MAP = (_SIZE_TO_WIDTH_LINE_M = {}, _SIZE_TO_WIDTH_LINE_M[SIZES.LARGE] = 4, _SIZE_TO_WIDTH_LINE_M[SIZES.SMALL] = 8, _SIZE_TO_WIDTH_LINE_M);
var BASE_CLASS_NAME = 'sui-AtomCircleProgressBar';
var INDICATOR_CLASS_NAME = BASE_CLASS_NAME + "-indicator";

var Indicator = function Indicator(props) {
  var _cx;

  var percentage = props.percentage,
      status = props.status,
      errorIcon = props.errorIcon,
      size = props.size; // eslint-disable-line react/prop-types

  if (status === STATUS.LOADING) return null;
  return React.createElement("span", {
    className: cx(INDICATOR_CLASS_NAME, (_cx = {}, _cx[INDICATOR_CLASS_NAME + "--small"] = size === SIZES.SMALL, _cx[INDICATOR_CLASS_NAME + "--inner"] = size === SIZES.LARGE || status === STATUS.ERROR, _cx[INDICATOR_CLASS_NAME + "--outer"] = size === SIZES.SMALL && status !== STATUS.ERROR, _cx[INDICATOR_CLASS_NAME + "--error"] = status === STATUS.ERROR, _cx))
  }, status === STATUS.PROGRESS && React.createElement("span", null, percentage, "%"), status === STATUS.ERROR && errorIcon);
};

var CircleProgressBar = function CircleProgressBar(_ref) {
  var _cx2;

  var percentage = _ref.percentage,
      status = _ref.status,
      errorIcon = _ref.errorIcon,
      size = _ref.size,
      isAnimatedOnChange = _ref.isAnimatedOnChange;
  var circleWidth = SIZE_TO_WIDTH_LINE_MAP[size];
  return React.createElement("div", {
    className: cx(BASE_CLASS_NAME, (_cx2 = {}, _cx2[BASE_CLASS_NAME + "--" + size] = !!size && status !== STATUS.ERROR, _cx2))
  }, React.createElement(Circle, {
    baseClassName: BASE_CLASS_NAME,
    modifier: status,
    percentage: status === STATUS.PROGRESS ? percentage : 0,
    withAnimation: isAnimatedOnChange,
    strokeWidth: circleWidth,
    size: size
  }), React.createElement(Indicator, {
    percentage: percentage,
    size: size,
    status: status,
    errorIcon: errorIcon
  }));
};

CircleProgressBar.displayName = 'LineProgressBar';
CircleProgressBar.defaultProps = {
  isAnimatedOnChange: false,
  status: STATUS.PROGRESS
};
export default CircleProgressBar;